# Generated by Django 5.2.7 on 2025-10-12 14:50

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("destinations", "0001_initial"),
        ("services", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("booking_date", models.DateTimeField(auto_now_add=True)),
                ("service_date", models.DateField()),
                ("service_time", models.TimeField()),
                (
                    "number_of_adults",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "number_of_children",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "guest_names",
                    models.TextField(blank=True, help_text="Names of all guests"),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                            ("GBP", "British Pound"),
                            ("KES", "Kenyan Shilling"),
                            ("TZS", "Tanzanian Shilling"),
                            ("ZAR", "South African Rand"),
                        ],
                        default="USD",
                        max_length=3,
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "final_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("special_requests", models.TextField(blank=True)),
                (
                    "emergency_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "emergency_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "confirmation_code",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("confirmed_at", models.DateTimeField(blank=True, null=True)),
                ("cancelled_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="services.tourservice",
                    ),
                ),
                (
                    "tourist",
                    models.ForeignKey(
                        limit_choices_to={"user_type": "tourist"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Booking",
                "verbose_name_plural": "Bookings",
                "ordering": ["-booking_date"],
            },
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, max_length=220, unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=200)),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "discounted_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Special discounted price",
                        max_digits=10,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                            ("GBP", "British Pound"),
                            ("KES", "Kenyan Shilling"),
                            ("TZS", "Tanzanian Shilling"),
                            ("ZAR", "South African Rand"),
                        ],
                        default="USD",
                        max_length=3,
                    ),
                ),
                ("duration_days", models.PositiveIntegerField()),
                ("max_capacity", models.PositiveIntegerField(default=10)),
                ("included_items", models.TextField(blank=True)),
                ("excluded_items", models.TextField(blank=True)),
                ("featured_image", models.ImageField(upload_to="packages/")),
                ("gallery_images", models.JSONField(blank=True, default=list)),
                ("meta_title", models.CharField(blank=True, max_length=60)),
                ("meta_description", models.CharField(blank=True, max_length=160)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "destination",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="packages",
                        to="destinations.destination",
                    ),
                ),
            ],
            options={
                "verbose_name": "Package",
                "verbose_name_plural": "Packages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PackageService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_number",
                    models.PositiveIntegerField(
                        help_text="Day number in the package itinerary"
                    ),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(help_text="Order within the day"),
                ),
                ("start_time", models.TimeField(blank=True, null=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Special notes for this service in the package",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bookings.package",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="services.tourservice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Package Service",
                "verbose_name_plural": "Package Services",
                "ordering": ["day_number", "sequence"],
            },
        ),
        migrations.AddField(
            model_name="package",
            name="services",
            field=models.ManyToManyField(
                through="bookings.PackageService", to="services.tourservice"
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True,
                        help_text="External payment gateway transaction ID",
                        max_length=100,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("USD", "US Dollar"),
                            ("EUR", "Euro"),
                            ("GBP", "British Pound"),
                            ("KES", "Kenyan Shilling"),
                            ("TZS", "Tanzanian Shilling"),
                            ("ZAR", "South African Rand"),
                        ],
                        default="USD",
                        max_length=3,
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("paypal", "PayPal"),
                            ("stripe", "Stripe"),
                            ("cash", "Cash"),
                            ("bank_transfer", "Bank Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("10.00"),
                        help_text="Commission percentage (e.g., 10.00 for 10%)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "commission_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Your earnings from this booking",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "provider_payout",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Amount to be paid to service provider",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("gateway_response", models.JSONField(blank=True, default=dict)),
                (
                    "refund_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("refund_date", models.DateTimeField(blank=True, null=True)),
                ("refund_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="bookings.booking",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1 - Poor"),
                            (2, "2 - Fair"),
                            (3, "3 - Good"),
                            (4, "4 - Very Good"),
                            (5, "5 - Excellent"),
                        ]
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("comment", models.TextField(blank=True)),
                (
                    "value_for_money",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 - Poor"),
                            (2, "2 - Fair"),
                            (3, "3 - Good"),
                            (4, "4 - Very Good"),
                            (5, "5 - Excellent"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "service_quality",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 - Poor"),
                            (2, "2 - Fair"),
                            (3, "3 - Good"),
                            (4, "4 - Very Good"),
                            (5, "5 - Excellent"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "cleanliness",
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[
                            (1, "1 - Poor"),
                            (2, "2 - Fair"),
                            (3, "3 - Good"),
                            (4, "4 - Very Good"),
                            (5, "5 - Excellent"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "is_approved",
                    models.BooleanField(default=False, help_text="Moderation status"),
                ),
                ("admin_notes", models.TextField(blank=True)),
                ("provider_response", models.TextField(blank=True)),
                ("provider_response_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="bookings.booking",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="services.tourservice",
                    ),
                ),
                (
                    "tourist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
                "verbose_name_plural": "Reviews",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["tourist", "status"], name="bookings_bo_tourist_e38522_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["service_date"], name="bookings_bo_service_304252_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["status", "service_date"], name="bookings_bo_status_603a94_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["confirmation_code"], name="bookings_bo_confirm_783da7_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="packageservice",
            unique_together={("package", "service", "day_number")},
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(fields=["slug"], name="bookings_pa_slug_f86090_idx"),
        ),
        migrations.AddIndex(
            model_name="package",
            index=models.Index(
                fields=["is_active", "is_featured"],
                name="bookings_pa_is_acti_c21de9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["status", "created_at"], name="bookings_pa_status_3e8a31_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["payment_id"], name="bookings_pa_payment_fcef91_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(
                fields=["service", "is_approved"], name="bookings_re_service_9ed656_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="review",
            index=models.Index(
                fields=["rating", "is_approved"], name="bookings_re_rating_e466f2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="review",
            unique_together={("booking", "tourist", "service")},
        ),
    ]
