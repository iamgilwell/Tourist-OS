# Generated by Django 5.2.7 on 2025-10-12 14:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("bookings", "0001_initial"),
        ("destinations", "0001_initial"),
        ("services", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily Report"),
                            ("weekly", "Weekly Report"),
                            ("monthly", "Monthly Report"),
                            ("quarterly", "Quarterly Report"),
                            ("annual", "Annual Report"),
                            ("custom", "Custom Report"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "data",
                    models.JSONField(
                        default=dict, help_text="Report data in JSON format"
                    ),
                ),
                ("file", models.FileField(blank=True, null=True, upload_to="reports/")),
                ("generated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "destination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="destinations.destination",
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reports",
                        to="services.serviceprovider",
                    ),
                ),
            ],
            options={
                "verbose_name": "Report",
                "verbose_name_plural": "Reports",
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalyticsData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("bookings", "Total Bookings"),
                            ("revenue", "Total Revenue"),
                            ("users", "New Users"),
                            ("page_views", "Page Views"),
                            ("conversion_rate", "Conversion Rate"),
                        ],
                        max_length=20,
                    ),
                ),
                ("value", models.DecimalField(decimal_places=2, max_digits=15)),
                ("date_recorded", models.DateField()),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional data in JSON format",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "destination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="destinations.destination",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="services.serviceprovider",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="services.tourservice",
                    ),
                ),
            ],
            options={
                "verbose_name": "Analytics Data",
                "verbose_name_plural": "Analytics Data",
                "ordering": ["-date_recorded"],
                "indexes": [
                    models.Index(
                        fields=["date_recorded", "metric_type"],
                        name="analytics_a_date_re_b7ee12_idx",
                    ),
                    models.Index(
                        fields=["destination", "metric_type"],
                        name="analytics_a_destina_1bee79_idx",
                    ),
                    models.Index(
                        fields=["service", "metric_type"],
                        name="analytics_a_service_fe5ffe_idx",
                    ),
                    models.Index(
                        fields=["provider", "metric_type"],
                        name="analytics_a_provide_d51a90_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Promotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "promotion_type",
                    models.CharField(
                        choices=[
                            ("featured", "Featured Listing"),
                            ("banner", "Banner Ad"),
                            ("push", "Push Notification"),
                            ("package", "Package Promotion"),
                            ("email", "Email Campaign"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="promotions/"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="What the business pays for this promotion",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "impressions",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of times shown"
                    ),
                ),
                (
                    "clicks",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of clicks"
                    ),
                ),
                (
                    "conversions",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of bookings generated"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_paid", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promotions",
                        to="bookings.package",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promotions",
                        to="services.tourservice",
                    ),
                ),
                (
                    "target_categories",
                    models.ManyToManyField(blank=True, to="destinations.category"),
                ),
                (
                    "target_destinations",
                    models.ManyToManyField(blank=True, to="destinations.destination"),
                ),
            ],
            options={
                "verbose_name": "Promotion",
                "verbose_name_plural": "Promotions",
                "ordering": ["-start_date"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "start_date", "end_date"],
                        name="analytics_p_is_acti_ddb112_idx",
                    ),
                    models.Index(
                        fields=["promotion_type", "is_active"],
                        name="analytics_p_promoti_840981_idx",
                    ),
                ],
            },
        ),
    ]
